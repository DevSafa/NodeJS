- To process HTTP requests in JavaScript and Node.js, we can use the built-in 
    http module.

- This core module is key in leveraging Node.js networking and is extremely useful in creating HTTP servers and processing 
    HTTP requests.

- One of the most commonly used methods within the http module is the 
    .createServer() method. This method is responsible for doing exactly 
        what its namesake implies; it creates an HTTP server

--------------------------------------
The Anatomy of the URL

-HTTP servers have to break down requests into their constituent parts 
    to effectively process them and provide adequate responses

- A URL can provide a great deal of information about a request and how it is expected to behave
    https://codeacademy/articles?search=node
    ------- ---------- -------- ----------- 
    Protocol   Domain   Path    Query  
-A URL is made up of the following parts :

1) Protocol: The protocol of the URL denotes what protocol 
    is being used for this particular resource.
    For instance, a URL could have a protocol of HTTP or HTTPS.

2) Domain: The domain of the URL is a unique reference that identifies a website on the Internet.

3) Path: The path refers to a file or directory on the web server.
     Paths oftentimes contain path parameters that APIs can process 
    as a way to provide additional data when processing. For instance, 
    to request a resource for a user with ID number 15, we can add the userâ€™s ID to the URL like this: /users/15.

4) Query: The query is commonly found on pages that contain dynamic content. Queries are prefixed
     by a ? and appear at the end of a URL. Queries can be comprised of multiple key/value pairs,
     separated by a &, with each key being assigned its corresponding value using a =. 
     Queries are often used in conjunction with GET requests to pass filter parameters 
     in order to provide specificity for the requested resource. For instance,
     to request all users that are active members, we could append a key/value pair of active=true 
     to the end of our URL like this: /users?active=true.

const url = 'http://example.com/users/25/projects?type=personal&month=january';


--------------------------------------

URL module

-Typically, an HTTP server will require information from 
    the request URL to accurately process a request.

-This request URL is located on the url property contained within 
    the req object itself. To parse the different 
    parts of this URL easily, Node.js provides the built-in url module.
     The core of the url module revolves around the URL class.